"""db_tables

Revision ID: 4210d67086fa
Revises: 
Create Date: 2023-05-27 17:29:19.331781

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4210d67086fa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phoneNumber', sa.String(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('phoneNumber', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('consultations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('phoneNumber', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('contactMethod', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventHallRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('numberOfGuests', sa.Integer(), nullable=False),
    sa.Column('budgetPerDay', sa.Integer(), nullable=False),
    sa.Column('numberOfDays', sa.Integer(), nullable=False),
    sa.Column('isPaid', sa.Boolean(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hotelRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checkInDate', sa.String(), nullable=False),
    sa.Column('checkOutDate', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('numberOfGuests', sa.Integer(), nullable=False),
    sa.Column('numberOfRooms', sa.Integer(), nullable=False),
    sa.Column('budgetPerRoom', sa.Integer(), nullable=False),
    sa.Column('isPaid', sa.Boolean(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meetingRoomRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checkInDate', sa.String(), nullable=False),
    sa.Column('checkOutDate', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('numberOfGuests', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('budgetPerDay', sa.Integer(), nullable=False),
    sa.Column('numberOfDays', sa.Integer(), nullable=False),
    sa.Column('isPaid', sa.Boolean(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('officeSpaceRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checkInDate', sa.String(), nullable=False),
    sa.Column('checkOutDate', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('numberOfWorkers', sa.Integer(), nullable=False),
    sa.Column('numberOfWorkstations', sa.Integer(), nullable=False),
    sa.Column('budgetPerDay', sa.Integer(), nullable=False),
    sa.Column('numberOfDays', sa.Integer(), nullable=False),
    sa.Column('isPaid', sa.Boolean(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service', sa.Enum('propertyRequest', 'hotelRequest', 'propertyListing', name='services'), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('propertyListings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('propertyType', sa.String(), nullable=False),
    sa.Column('propertyImages', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('numberOfrooms', sa.Integer(), nullable=True),
    sa.Column('numberOfToilets', sa.Integer(), nullable=True),
    sa.Column('numberOfBathrooms', sa.Integer(), nullable=True),
    sa.Column('numberOfLivingRooms', sa.Integer(), nullable=True),
    sa.Column('numberOfKitchens', sa.Integer(), nullable=True),
    sa.Column('agentId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agentId'], ['agents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('propertyManagementRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('propertyRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('propertyType', sa.String(), nullable=False),
    sa.Column('numberOfrooms', sa.Integer(), nullable=True),
    sa.Column('budgetRange', sa.String(), nullable=False),
    sa.Column('maxBudget', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('isPaid', sa.Boolean(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shortletRequests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checkInDate', sa.String(), nullable=False),
    sa.Column('checkOutDate', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('numberOfRooms', sa.Integer(), nullable=False),
    sa.Column('budgetPerDay', sa.Integer(), nullable=False),
    sa.Column('numberOfDays', sa.Integer(), nullable=False),
    sa.Column('isPaid', sa.Boolean(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shortletRequests')
    op.drop_table('propertyRequests')
    op.drop_table('propertyManagementRequests')
    op.drop_table('propertyListings')
    op.drop_table('payments')
    op.drop_table('officeSpaceRequests')
    op.drop_table('meetingRoomRequests')
    op.drop_table('hotelRequests')
    op.drop_table('eventHallRequests')
    op.drop_table('consultations')
    op.drop_table('users')
    op.drop_table('agents')
    # ### end Alembic commands ###
